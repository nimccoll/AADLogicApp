{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "eventhubs_1_Connection_Name": {
      "type": "string",
      "defaultValue": "eventhubs"
    },
    "eventhubs_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "nimccolleh1"
    },
    "eventhubs_1_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Event Hubs Connection String"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "UserPrincipalName",
                    "type": "String",
                    "value": "\"\""
                  }
                ]
              },
              "runAfter": {}
            },
            "Initialize_variable_2": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Action",
                    "type": "String",
                    "value": "\"\""
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "Parse_Audit_JSON": {
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()?['ContentData']",
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string"
                    },
                    "correlationId": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    },
                    "resultReason": {
                      "type": "string"
                    },
                    "activityDisplayName": {
                      "type": "string"
                    },
                    "activityDateTime": {
                      "type": "string"
                    },
                    "loggedByService": {
                      "type": "string"
                    },
                    "initiatedBy": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "displayName": {},
                            "userPrincipalName": {
                              "type": "string"
                            },
                            "ipAddress": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "targetResources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "displayName": {},
                          "type": {
                            "type": "string"
                          },
                          "userPrincipalName": {},
                          "groupType": {},
                          "modifiedProperties": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "displayName": {
                                  "type": "string"
                                },
                                "oldValue": {},
                                "newValue": {}
                              },
                              "required": [
                                "displayName",
                                "oldValue",
                                "newValue"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "displayName",
                          "type",
                          "userPrincipalName",
                          "groupType",
                          "modifiedProperties"
                        ]
                      }
                    },
                    "additionalDetails": {
                      "type": "array"
                    }
                  }
                }
              },
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              }
            },
            "Condition": {
              "type": "If",
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@body('Parse_Audit_JSON')?['activityDisplayName']",
                      "Add user"
                    ]
                  },
                  {
                    "equals": [
                      "@body('Parse_Audit_JSON')?['activityDisplayName']",
                      "Add member to group"
                    ]
                  }
                ]
              },
              "actions": {
                "For_each": {
                  "type": "Foreach",
                  "foreach": "@body('Parse_Audit_JSON')?['targetResources']",
                  "actions": {
                    "Set_variable": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "UserPrincipalName",
                        "value": "@items('For_each')?['userPrincipalName']"
                      },
                      "runAfter": {}
                    },
                    "Set_variable_2": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "Action",
                        "value": "@body('Parse_Audit_JSON')?['activityDisplayName']"
                      },
                      "runAfter": {
                        "Set_variable": [
                          "Succeeded"
                        ]
                      }
                    }
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Parse_Audit_JSON": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_events_are_available_in_Event_Hub": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['eventhubs']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent('azureadaudit')}/events/batch/head",
                "queries": {
                  "contentType": "application/json",
                  "consumerGroupName": "$Default",
                  "maximumEventsCount": 50
                }
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": 3
              },
              "splitOn": "@triggerBody()"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "eventhubs": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'eventhubs')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('eventhubs_1_Connection_Name'))]",
                "connectionName": "[parameters('eventhubs_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('eventhubs_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('eventhubs_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'eventhubs')]"
        },
        "displayName": "[parameters('eventhubs_1_Connection_DisplayName')]",
        "parameterValues": {
          "connectionString": "[parameters('eventhubs_1_connectionString')]"
        }
      }
    }
  ],
  "outputs": {}
}